(defpoll volume-output :interval "1s" './modules/audio/rancid/volume get output')
(defpoll volume-input :interval "1s" './modules/audio/rancid/volume get input')

(defvar volume-reveal false)
(defvar volume-output-mute false)
(defvar volume-input-mute false)

(defvar rancid-popup "./scripts/popup")
(defvar rancid-volume "./modules/audio/rancid/volume")

(defwidget volume-control 
    [
        ?theme ?style ?type
        ?box-classes ?button-classes
        ?space-evenly ?orientation ?halign
    ]
    (box 
        :class 
            "volume-widget 
            ${theme} 
            ${style} 
            ${box-classes}"
        :space-evenly '${space-evenly ?: false}'
        :orientation '${orientation ?: "h"}'
        :halign '${halign ?: "start"}'
        (button 
            :class 
                "volume-button
                ${theme}
                ${style} 
                ${button-classes}"
            :onclick "${rancid-popup} volume"
            "${icons.audio.output}")))

(defwidget volume-window 
    [
        ?theme ?style ?type
        ?box-classes ?button-classes
        ?space-evenly ?orientation ?halign
        ?window-classes
    ]
    (box 
        :class 
            "volume-window 
            ${theme} 
            ${style} 
            ${window-classes}"
        :orientation "vertical"
        :halign "center"
        (box
            :orientation "horizontal"
            :space-evenly false
            (icon
                :class 
                    "mute-button 
                    ${theme} 
                    ${style}
                    ${button-classes}"
                :cmd "${rancid-volume} mute output"
                :icon "${volume-output-mute ? '${icons.audio.output-mute}' : '${icons.audio.output}'}")
            (scale 
                :width 250
                :value volume-output
                :orientation "h"
                :onchange "${rancid-volume} change output {}"))
        (box
            :orientation "h"
            :space-evenly false
            (button
                :class 
                    "mute-button 
                    ${theme} 
                    ${style}
                    ${button-classes}
                    "
                :onclick "${rancid-volume} mute input"
                '${volume-input-mute ? "${icons.audio.input-mute}" : "${icons.audio.input}"}')
            (scale
                :width 250
                :value volume-input
                :orientation "h"
                :onchange "${rancid-volume} change input {}"))))
	

(defwindow volume 
    :geometry (geometry :x 0 :y 120 :anchor "top center")
    (volume-window))
