(defpoll volume 
    :initial "{}" 
    :run-while volume-reveal 
    :interval "150ms" "./modules/audio/rancid/volume get")
(defvar volume-reveal false)

(defwidget volume [] 
    (rancid-icon
        :classes "volume-button"
        :icon-type "text" 
        :icon '${volume.output.muted ? "${icons.audio.output-mute}" : "${icons.audio.output}"}'
        :lclick "./scripts/popup volume-info-window"))

(defwidget volume-info 
    [
        ?theme ?style ?type
        ?box-classes ?button-classes
        ?space-evenly ?orientation ?halign
        ?window-classes
    ]
    (box 
        :class 
            "volume-window ${window-classes}"
        :orientation "vertical"
        :halign "center"
        (box
            :class 
                "${volume.output.volume <= audio-opts.normal  ? 'volume-level-normal'  : 
                   volume.output.volume <= audio-opts.warning ? 'volume-level-warning' : 
                   volume.output.volume >  audio-opts.warning ? 'volume-level-danger'  : ''} 
                ${volume.output.muted == true ? 'muted' : ''}"
            :orientation "horizontal"
            :space-evenly false
            (icon
                :class "mute-button ${button-classes}"
                :icon "${volume.output.muted ? '${icons.audio.output-mute}' : '${icons.audio.output}'}"
                :lclick "./modules/audio/rancid/volume mute output")
            (scale 
                :width 250
                :value "${volume.output.volume}"
                :orientation "horizontal"
                :onchange "./modules/audio/rancid/volume change output {}"))
        (box
            :class
                "${volume.input.volume <= audio-opts.normal  ? 'volume-level-normal'  : 
                   volume.input.volume <= audio-opts.warning ? 'volume-level-warning' : 
                   volume.input.volume >  audio-opts.warning ? 'volume-level-danger'  : ''} 
                ${volume.input.muted == true ? 'muted' : ''}"
            :orientation "horizontal"
            :space-evenly false
            (icon
                :class "mute-button ${window-classes}" 
                :icon "${volume.input.muted ? '${icons.audio.input-mute}' : '${icons.audio.input}'}"
                :lclick "./modules/audio/rancid/volume mute input")
            (scale
                :width 250
                :value "${volume.input.volume}"
                :orientation "horizontal"
                :onchange "./modules/audio/rancid/volume change input {}"))))
	

(defwindow volume-info-window
    :geometry (geometry :x 0 :y 120 :anchor "top center")
    (volume-info))
