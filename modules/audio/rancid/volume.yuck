(defpoll volume-output :interval "500ms" './modules/audio/rancid/volume get output')
(defpoll volume-input :interval "500ms" './modules/audio/rancid/volume get input')

(defvar volume-reveal false)
(defvar volume-output-mute false)
(defvar volume-input-mute false)

(defvar rancid-volume "./modules/audio/rancid/volume")

(defwidget volume-control [] 
    (rancid-icon
        :classes "volume-button"
        :icon-type "text" 
        :icon "${volume-output-mute ? icons.audio.output-mute : icons.audio.output}"
        :lclick "./scripts/popup volume"))


(defwidget volume-window 
    [
        ?theme ?style ?type
        ?box-classes ?button-classes
        ?space-evenly ?orientation ?halign
        ?window-classes
    ]
    (box 
        :class "volume-window ${theme} ${style} ${window-classes}"
        :orientation "vertical"
        :halign "center"
        (box
            :orientation "horizontal"
            :space-evenly false
            (icon
                :class "mute-button ${theme} ${style} ${button-classes}"
                :icon "${volume-output-mute ? '${icons.audio.output-mute}' : '${icons.audio.output}'}"
                :lclick "${rancid-volume} mute output")
            (scale 
                :width 250
                :value volume-output
                :orientation "horizontal"
                :onchange "${rancid-volume} change output {}"))
        (box
            :orientation "horizontal"
            :space-evenly false
            (icon
                :class "mute-button ${theme} ${style} ${button-classes}"
                :icon "${volume-input-mute ? '${icons.audio.input-mute}' : '${icons.audio.input}'}"
                :lclick "${rancid-volume} mute input")
            (scale
                :width 250
                :value volume-input
                :orientation "horizontal"
                :onchange "${rancid-volume} change input {}"))))
	

(defwindow volume 
    :geometry (geometry :x 0 :y 120 :anchor "top center")
    (volume-window))
